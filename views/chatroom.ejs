<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src='https://meet.jit.si/external_api.js'></script>
    <style>
        html,body{margin:0;height:100%;}
        div{
            margin:0;display: inline;}
        .video
        {
            height:100%;
        }
        #time
        {
            position:absolute;
            bottom:5px;
            font-size: 35px;
        }
        #links
        {
            position: absolute;
            bottom:35px;
            font-size: 35px;
        }
        #alter
        {
            position: absolute;
            bottom: 35px;
            right: 35px;
            font-size:35px;
        }
    </style>
</head>
<body>
    <div id="time"></div>
    <div id="links"></div>
    <div id="video"></div>
    <p id="alter"></p>
</body>
<script>
    var name=prompt("please enter your name:-")
    console.log(document.querySelector('#video'))
    var domain = 'meet.gitcommit.show';
    var options = {
        roomName: 'tester',
        height:"100%",
        parentNode:document.querySelector('#video'),
        ConfigOverwrite: {
            disableDeepLinking: true,
        },
        device:{
            audioInput:'<deviceLabel>',
            audioOutput:'<deviceLabel>',
            vidoInput:'<deviceLabel>'
        },
        userInfo:{
            displayName:name,
        },
        configOverwrite: { startWithAudioMuted: false },
    }
    var api = new JitsiMeetExternalAPI(domain, options);
    
    // api.isAudioAvailable()
    // .then(avi=>{
    //     console.log("motnu")
    //     console.log(avi)
    // })
    // .catch((err)=>{window.alert("audio is not avaliable refresh the page")})

    // api.isVideoAvailable()
    // .then((video)=>{consol.log('prasanna');console.log(video)})
    // .catch(()=>{return(window.alert("plzz refresh the page"))});

    // api.addEventListener(cameraError,(msg)=>{
    //     console.log("error")
    //     console.log(msg)
    // })

    // setInterval(()=>{
    //     console.log('hangup')
    //     api.executeCommand('hangup')
    //     window.close();
    // },30000)
</script>
<script>
    const time=new Date().getTime()+15*60*1000;
    const Divtime=document.getElementById("time");
    const links=document.getElementById("links")
    const alter=document.getElementById("alter")
    console.log(alter)
setInterval(()=>{
    const rtime=new Date().getTime();
    var show=time-rtime;
    var min=Math.floor((show%(1000*60*60)) / (1000 * 60));
    var second=Math.floor((show%(1000*60))/1000)
    Divtime.innerHTML=min+":"+second;
},1000)
setInterval(()=>{
    links.innerHTML=`<a href="live.gitcommit.show"> live stream is about to start click here</a>`
},13*60*1000)

setInterval(()=>{
    alter.innerHTML=`facing issue <br><a href="">click here</a> to try alternative`
},10000)
</script>
</html>